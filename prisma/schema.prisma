generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Article {
  id            String   @id @default(uuid())
  title         String
  titleOriginal String?
  description   String?
  descriptionOriginal String?
  content       String?
  contentOriginal String?
  link          String   @unique
  pubDate       DateTime
  source        String
  category      String
  imageUrl      String?
  trendingScore Float    @default(0)
  keywords      String?
  isTranslated  Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([pubDate])
  @@index([category])
  @@index([source])
  @@index([trendingScore])
  @@index([isTranslated])
}

model RSSSource {
  id           String   @id @default(uuid())
  name         String
  url          String   @unique
  category     String
  type         String   @default("rss")  // "rss" | "web"
  isActive     Boolean  @default(false)  // 默认禁用,测试通过后才启用
  isTested     Boolean  @default(false)  // 是否已测试通过
  testStatus   String?  // "pending" | "success" | "failed"
  testResult   String?  // 测试结果(JSON格式)
  lastTested   DateTime? // 最后测试时间
  lastFetched  DateTime? // 最后采集时间
  scrapeConfig String?  // 网页抓取配置(JSON格式,用于 web 类型)

  // 智能RSS发现相关字段
  feedType     String?  @default("unknown") // "specific" | "general" | "unknown"
  websiteUrl   String?  // 网站主页 URL (用于识别同一网站)
  aiAnalysis   String?  // AI 分析结果 JSON (存储完整分析)

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([isActive])
  @@index([isTested])
  @@index([type])
  @@index([feedType])
}

model HotTopic {
  id              String   @id @default(uuid())
  type            String   // "12h" or "24h"
  title           String
  discussionCount Int
  sources         String   // JSON array of source names
  articleIds      String   // JSON array of article IDs
  score           Float
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([type])
  @@index([createdAt])
}

model FilteredArticle {
  id          String   @id @default(uuid())
  link        String   @unique
  title       String
  source      String
  reason      String?  // 过滤原因
  filteredAt  DateTime @default(now())

  @@index([link])
  @@index([filteredAt])
}

model PromptConfig {
  id          String   @id @default(uuid())
  key         String   @unique  // 唯一标识: "rss_analysis", "content_filter", "trending_analysis"
  name        String              // 显示名称: "RSS源智能分析", "内容智能过滤", "热点话题分析"
  description String              // 功能描述

  // 可编辑部分（用户可修改）
  systemPrompt String             // System 提示词（智能体描述）

  // 只读部分（用户不可修改，由系统管理）
  userPromptTemplate String @db.Text  // User 提示词模板（包含变量占位符）
  outputFormat       String @db.Text  // 输出格式说明（JSON schema）

  // 配置参数（只读）
  temperature     Float?             // 温度参数
  useJsonMode     Boolean @default(false)  // 是否使用 JSON 模式

  // 元数据
  version     Int      @default(1)  // 版本号
  isActive    Boolean  @default(true)  // 是否启用
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([key])
  @@index([isActive])
}
